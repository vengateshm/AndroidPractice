plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 33

    defaultConfig {
        namespace "com.android.vengateshm.androidpractice"
        applicationId "com.android.vengateshm.androidpractice"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android.applicationVariants.all {

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    kapt {
        correctErrorTypes = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.core:core-splashscreen:1.0.1' // For versions below 12

    implementation 'androidx.appcompat:appcompat:1.6.1'

    implementation 'com.google.android.material:material:1.9.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //AndroidX Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def preference_datastore_version = "1.0.0"
    implementation "androidx.datastore:datastore-preferences:$preference_datastore_version"

    def kotlinx_coroutines = "1.6.4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    def kotlinx_coroutines_android = "1.7.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_android"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def gson_version = '2.9.1'
    implementation "com.google.code.gson:gson:$gson_version"

    def okhttp_version = "5.0.0-alpha.3"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    def mavericks_version = '3.0.1'
    implementation "com.airbnb.android:mavericks:$mavericks_version"

    def mavericks_rxjava2_version = '3.0.1'
    implementation "com.airbnb.android:mavericks-rxjava2:$mavericks_rxjava2_version"

    def rxjava2_version = "2.2.21"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"

    def rxjava2_android_version = "2.1.1"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2_android_version"

    /*def rxjava3_version = "3.1.3"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava3_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava3_version"*/

    def epoxy_version = '5.0.0'
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    implementation "com.airbnb.android:epoxy-databinding:$epoxy_version"
    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"

    // Koin
    def koin_android_version = "3.3.2"
    implementation "io.insert-koin:koin-android:$koin_android_version"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt"

    implementation 'com.razorpay:checkout:1.6.26'

    //implementation project (':excel_to_pdf')
    implementation project(':stock-exchange')

    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.5"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines"
    testImplementation "org.robolectric:robolectric:4.10.3"
    testImplementation "com.google.truth:truth:1.1.4"

    // Android test dependencies
    // AndroidJUnitRunner
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    def fragment_version = "1.6.0"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
}